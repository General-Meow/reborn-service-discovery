# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
jobs:
  static-analysis:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - run: 'echo analyse!'
  security-checks:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - run: 'echo looking at dependencies against OWASP'
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      - run: mvn clean
      # Download and cache dependencies
#      - restore_cache:
#          keys:
#            - v1-dependencies-{{ checksum "pom.xml" }}
#            # fallback to using the latest cache if no exact match is found
#            - v1-dependencies-
#
#      - run: mvn dependency:go-offline
#
#      - save_cache:
#          paths:
#            - ~/.m2
#          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn -X test
  unit-tests:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - run: "echo test!"
  integration-tests:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - run: "echo integration test!"
  dockerise-push:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - run: 'echo dockerise!'
      - run: 'echo push to registry'
  deploy-to-dev:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - run: 'echo deploying to dev!'
  deploy-to-int:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - run: 'echo deploying to int!'
  e2e-tests:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - run: 'echo running e2e tests!'
  deploy-to-stage:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - run: 'echo deploying to stage!'
  deploy-to-prod:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - run: 'echo deploying to prod!'

workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - static-analysis
      - security-checks
      - build:
          requires:
            - static-analysis
            - security-checks
      - unit-tests:
          requires:
            - build
      - integration-tests:
          requires:
            - build
      - dockerise-push:
          requires:
            - unit-tests
            - integration-tests
      - deploy-to-dev:
          requires:
            - dockerise-push
      - deploy-to-int:
          requires:
            - deploy-to-dev
      - e2e-tests:
          requires:
            - deploy-to-int
      - approve-to-stage:
          type: approval
          requires:
            - e2e-tests
      - deploy-to-stage:
          requires:
            - approve-to-stage
      - approve-to-prod:
          type: approval
          requiers:
            - deploy-to-stage
      - deploy-to-prod:
          requires:
            - approve-to-prod
